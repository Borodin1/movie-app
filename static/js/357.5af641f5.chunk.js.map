{"version":3,"file":"static/js/357.5af641f5.chunk.js","mappings":"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","sources":["api/api.ts","webpack://movie-app/./src/components/DetailInfo/DetailInfo.module.scss?68df","components/DetailInfo/index.tsx","pages/TVShowInfoPage/index.tsx","hooks/useGetDetailTVShow.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst options = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\",\n    Authorization:\n      \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3OWQwNzNhOWQ5ZjBlYThkNjlhZDI5YzJiZmM3ZTkyMiIsInN1YiI6IjY1NWUzZTE1NjYzNjI3MDExZmY5Y2IzZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.71ZvBuAhpTwy3QkN3D8FNrJD9PKbQOJ-Hw8xksD2E-8\",\n  },\n};\n\nexport const api = {\n  movies: {\n    async getMovies() {\n      const { data: movies } = await axios.get(\n        \"https://api.themoviedb.org/3/trending/movie/day?language=en-US\",\n        options\n      );\n      return movies;\n    },\n    async getAllMovies(page:number) {\n      const { data: moviesP } = await axios.get(\n        `https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=${page}`,\n        options\n      );\n      return moviesP;\n    },\n    async getMovieInfo(id:string|number) {\n      const { data } = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n        options\n      );\n      return data;\n    },\n  },\n  tvshows: {\n    async getTVShows(page:number) {\n      const { data: tvshows } = await axios.get(\n        `https://api.themoviedb.org/3/tv/popular?language=en-US&page=${page}`,\n        options\n      );\n      return tvshows;\n    },\n    async getTVShowInfo(id:string|number){\n      const {data:tvshowDetail} = await axios.get(\n        `https://api.themoviedb.org/3/tv/${id}`,\n        options\n      );\n      return tvshowDetail\n    }\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"detail-info-background\":\"DetailInfo_detail-info-background__u8Fow\",\"detail-path\":\"DetailInfo_detail-path__Qylhk\",\"detail\":\"DetailInfo_detail__GG2dV\",\"detail-description\":\"DetailInfo_detail-description__4aLcf\",\"detail-ratings\":\"DetailInfo_detail-ratings__SG079\",\"detail-date\":\"DetailInfo_detail-date__WQelp\",\"detail-runtime\":\"DetailInfo_detail-runtime__e6kCO\",\"detail-genres\":\"DetailInfo_detail-genres__3t210\"};","//styles\nimport styles from './DetailInfo.module.scss'\n\n//assets\nimport star from \"../../assets/vuesax/linear/star.png\";\nimport { IDetailInfo } from './type';\n\n\nexport const DetailInfo:React.FC<IDetailInfo>=(props)=>{\n    const {title,id,backdrop_path,poster_path,tagline,overview,vote_average,release_date,runtime,genresString}= props;\n    return(\n        <div className={styles[\"detail-info\"]}>\n        <div className={styles[\"detail-info-background\"]}>\n          <img\n            src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\n            alt={title}\n          />\n        </div>\n        <div className={styles[\"detail-path\"]}>\n          <div>\n            <p>{!runtime \n            ?`movies/movie/${id}`\n            : `tv-show/${id}`}\n            </p>\n            <h2>{title}</h2>\n          </div>\n        </div>\n        <div className={styles[\"detail\"]}>\n          <div className={styles[\"detail-image\"]}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n            />\n          </div>\n          <div className={styles[\"detail-description\"]}>\n            <h3>{tagline}</h3>\n            <p>{overview}</p>\n            <div className={styles[\"detail-ratings\"]}>\n              <p>\n                <img src={star} alt=\"star\" />\n                {vote_average?.toFixed(1)}\n              </p>\n            </div>\n              {release_date \n              ? (<div className={styles[\"detail-date\"]}>\n              <h2>Release Date:</h2>\n              <p>{release_date}</p>\n              </div>)\n            : ''}\n            <div className={styles[\"detail-runtime\"]}>\n              <h2>Run time</h2>\n              <p>{!runtime \n            ? 'Not find'\n            : runtime}\n            </p>\n            </div>\n            <div className={styles[\"detail-genres\"]}>\n              <h2>Genres</h2>\n              <p> {genresString}</p>\n            </div>\n        </div>\n      </div>\n      </div>\n    \n    )\n}","import { DetailInfo } from 'components/DetailInfo';\nimport { useGetDetailTVShow } from 'hooks/useGetDetailTVShow';\nimport { useParams } from 'react-router-dom';\n\nconst TVShowInfoPage = ()=>{\n    const params = useParams();\n\n    const { data } = useGetDetailTVShow(params.idTVShow as string);\n    const genresString = data?.genres?.map((genre:{name:string}) => genre.name).join(\", \");\n  \n    return <DetailInfo {...data} genresString={genresString}/>\n}\n\nexport default TVShowInfoPage","import { useQuery } from \"react-query\";\nimport { api } from \"../api/api\";\n\nexport const useGetDetailTVShow = (id:string|number) => {\n  const { data } = useQuery([\"tvshow-info\", id], () =>\n    api.tvshows.getTVShowInfo(id)\n  );\n  return {\n    data: data || [],\n  };\n};\n"],"names":["options","method","headers","accept","Authorization","api","movies","getMovies","data","axios","get","getAllMovies","page","moviesP","concat","getMovieInfo","id","tvshows","getTVShows","getTVShowInfo","tvshowDetail","DetailInfo","props","title","backdrop_path","poster_path","tagline","overview","vote_average","release_date","runtime","genresString","_jsxs","className","styles","children","_jsx","src","alt","star","toFixed","TVShowInfoPage","_data$genres","params","useParams","useQuery","useGetDetailTVShow","idTVShow","genres","map","genre","name","join"],"sourceRoot":""}