{"version":3,"file":"static/js/737.a2300299.chunk.js","mappings":"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","sources":["api/api.ts","webpack://movie-app/./src/components/Card/Card.module.scss?2b03","components/Card/index.tsx","components/Pagination/index.tsx","webpack://movie-app/./src/components/SearchInput/SearchInput.module.scss?d390","components/SearchInput/index.tsx","webpack://movie-app/./src/components/ContentPage/Content.module.scss?9a11","components/ContentPage/index.tsx","components/Loader/index.tsx","helpers/fetchify.tsx","webpack://movie-app/./src/components/Lists/Lists.module.scss?89a3","components/Lists/index.tsx","components/elements/input.tsx","hooks/useSearchValue.ts","pages/MoviesPage/index.tsx","hooks/useGetAllMovies.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst options = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\",\n    Authorization:\n      \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3OWQwNzNhOWQ5ZjBlYThkNjlhZDI5YzJiZmM3ZTkyMiIsInN1YiI6IjY1NWUzZTE1NjYzNjI3MDExZmY5Y2IzZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.71ZvBuAhpTwy3QkN3D8FNrJD9PKbQOJ-Hw8xksD2E-8\",\n  },\n};\n\nexport const api = {\n  movies: {\n    async getMovies() {\n      const { data: movies } = await axios.get(\n        \"https://api.themoviedb.org/3/trending/movie/day?language=en-US\",\n        options\n      );\n      return movies;\n    },\n    async getAllMovies(page:number) {\n      const { data: moviesP } = await axios.get(\n        `https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=${page}`,\n        options\n      );\n      return moviesP;\n    },\n    async getMovieInfo(id:string|number) {\n      const { data } = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n        options\n      );\n      return data;\n    },\n  },\n  tvshows: {\n    async getTVShows(page:number) {\n      const { data: tvshows } = await axios.get(\n        `https://api.themoviedb.org/3/tv/popular?language=en-US&page=${page}`,\n        options\n      );\n      return tvshows;\n    },\n    async getTVShowInfo(id:string|number){\n      const {data:tvshowDetail} = await axios.get(\n        `https://api.themoviedb.org/3/tv/${id}`,\n        options\n      );\n      return tvshowDetail\n    }\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card-info\":\"Card_card-info__+63q8\",\"card-average\":\"Card_card-average__XbzPE\"};","//Core\nimport { Link } from \"react-router-dom\";\n\n//styles\nimport styles from \"./Card.module.scss\";\n\n//assets\nimport star from \"../../assets/vuesax/linear/star.png\";\n\n//types\nimport { IContentModel } from 'types/ContentModel';\n\nexport const Card:React.FC<IContentModel> = ({ id, vote_average,part, poster_path, title, name }) => {\n  return (\n    <div key={id} className={styles[\"card-info\"]}>\n      <Link to={\n        part === 'TV Shows'\n        ? `/tv-show/${id}`\n        :`/movies/${id}`\n      }>\n        <div className={styles[\"card-average\"]}>\n          <p>\n            <img src={star} alt=\"star\" />\n            {vote_average.toFixed(1)}\n          </p>\n        </div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n        />\n        <h1>{title || name}</h1>\n      </Link>\n    </div>\n  );\n};\n","import { Pagination, Stack } from \"@mui/material\";\n\ninterface IPagination{\n  total_pages:number,\n  currentPage:number,\n  setCurrentPage:(page:number)=>void\n}\n\nexport const PaginationList:React.FC<IPagination> = ({\n  total_pages,\n  currentPage,\n  setCurrentPage,\n}) => {\n  return (\n    <div>\n      <Stack spacing={2}>\n        <Pagination\n          count={total_pages}\n          page={currentPage}\n          color=\"primary\"\n          size=\"large\"\n          onChange={(_, num) => setCurrentPage(num)}\n        />\n      </Stack>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search-input\":\"SearchInput_search-input__BfflM\"};","import Input from \"../elements/input\";\nimport styles from \"./SearchInput.module.scss\";\n\nimport search from \"../../assets/vuesax/linear/search-normal.png\";\nimport {  I_SearchInput } from 'types/input';\n\nexport const SearchInput:React.FC<I_SearchInput> = ({ title, searchValue, onSearchHandle }) => {\n  return (\n    <div className={styles[\"search-input\"]}>\n      <img src={search} alt=\"search\" />\n      <Input\n        type=\"text\"\n        placeholder={`Search ${title === \"Movie\" ? \"Movies\" : \"TV Shows\"}`}\n        value={searchValue}\n        handleChange={onSearchHandle}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"content-text\":\"Content_content-text__L5zcH\",\"content-pages\":\"Content_content-pages__wpEyO\"};","//Components\nimport { IContentPage } from 'types/ContentModel';\nimport { PaginationList } from \"../Pagination\";\nimport { SearchInput } from \"../SearchInput\";\n\n//assets\nimport styles from \"./Content.module.scss\";\n\nexport const ContentPage:React.FC<IContentPage> = (props) => {\n  const {\n    title,\n    searchValue,\n    onSearchHandle,\n    total_pages,\n    currentPage,\n    setCurrentPage,\n    children,\n  } = props;\n  return (\n    <div className={styles[\"content\"]}>\n      <div className={styles[\"content-text\"]}>\n        <h1>{title}</h1>\n        <p>\n          Here, you can explore a variety of\n          {title === \"Movie\" ? \" movies\" : \"tv shows\"} and find information\n          about them.\n        </p>\n      </div>\n      <SearchInput\n        title={title}\n        searchValue={searchValue}\n        onSearchHandle={onSearchHandle}\n      />\n      <div className={styles[\"content-pages\"]}>\n        <PaginationList\n          total_pages={total_pages}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n        />\n        {children}\n      </div>\n    </div>\n  );\n};\n","    import { PulseLoader } from 'react-spinners'\n\n    export const Loader:React.FC=()=>{\n        return(\n            <>\n            <PulseLoader color=\"#36d7b7\"/>\n            </>\n        )\n    }","import { Loader } from 'components/Loader';\nimport { ReactElement } from 'react';\n\ntype ContextType = string | undefined | null | boolean | ReactElement[]\n\n\nexport const fetchify = (isFetched:boolean, content:ContextType) => {\n  if (!isFetched) {\n    return <Loader/>\n  }\n  if (content) {\n    return content;\n  }\n\n  return <Loader/>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"lists\":\"Lists_lists__9pPtE\",\"lists-movies\":\"Lists_lists-movies__3g9Mq\"};","//Core\nimport { ReactElement } from 'react';\n\n//helpers\nimport { fetchify } from \"../../helpers/fetchify\";\n\n//style\nimport styles from \"./Lists.module.scss\";\n\ninterface ILists {\n  content: string | undefined | null | boolean | ReactElement[];\n  isFetched: boolean;\n}\n\nexport const Lists:React.FC<ILists> = ({ content, isFetched }) => {\n  return (\n    <div className={styles[\"lists\"]}>\n      <div className={styles[\"lists-movies\"]}>\n        {fetchify(isFetched, content)}\n      </div>\n    </div>\n  );\n};\n","import { I_Input } from 'types/input';\n\n\nconst Input:React.FC<I_Input> = ({ type, value, handleChange, placeholder }) => {\n  return (\n    <input\n      type={type}\n      placeholder={placeholder}\n      value={value}\n      onChange={(e) => handleChange(e.target.value)}\n    />\n  );\n};\n\nexport default Input;\n","import { useState } from \"react\";\n\nexport const UseSearchValue = (initialState: string) => {\n  const [searchValue, setSearchValue] = useState<string>(initialState);\n\n  const onSearchHandle = (value:string) => {\n    setSearchValue(value);\n  };\n\n  return [searchValue, setSearchValue, onSearchHandle] as const;\n};\n","import { useState } from \"react\";\nimport { ContentPage } from \"components/ContentPage\";\nimport { UseSearchValue } from \"hooks/useSearchValue\";\nimport { useGetAllMovies } from \"hooks/useGetAllMovies\";\nimport { Card } from \"components/Card\";\nimport { Lists } from \"components/Lists\";\nimport { IContentModel } from 'types/ContentModel';\n\nconst MoviesPage:React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const [searchValue, onSearchHandle] = UseSearchValue(\"\");\n  const { data, isFetchedAfterMount } = useGetAllMovies(currentPage);\n\n  const moviesJSX = data?.results\n    ?.filter(\n      (item: { title: string }) =>\n        item.title &&\n        item.title.toLowerCase().includes(searchValue.toLowerCase())\n    )\n    .map((movie:IContentModel) => {\n      return <Card part='Movies' key={movie.id} {...movie} />;\n    });\n  return (\n    <ContentPage\n      title=\"Movie\"\n      searchValue={searchValue}\n      setCurrentPage={setCurrentPage}\n      onSearchHandle={onSearchHandle}\n      total_pages={data.total_pages}\n      currentPage={currentPage}>\n      <Lists isFetched={isFetchedAfterMount} content={moviesJSX} />\n    </ContentPage>\n  );\n};\n\nexport default MoviesPage\n","import { useQuery } from \"react-query\";\nimport { api } from \"../api/api\";\n\nexport const useGetAllMovies = (page:number) => {\n  const { data, isFetchedAfterMount } = useQuery(\n    [\"movies-by-pages\", page],\n    () => api.movies.getAllMovies(page)\n  );\n\n  return {\n    data: data || [],\n    isFetchedAfterMount,\n  };\n};\n"],"names":["options","method","headers","accept","Authorization","api","movies","getMovies","data","axios","get","getAllMovies","page","moviesP","concat","getMovieInfo","id","tvshows","getTVShows","getTVShowInfo","tvshowDetail","Card","_ref","vote_average","part","poster_path","title","name","_jsx","className","styles","children","_jsxs","Link","to","src","star","alt","toFixed","PaginationList","total_pages","currentPage","setCurrentPage","Stack","spacing","Pagination","count","color","size","onChange","_","num","SearchInput","searchValue","onSearchHandle","search","Input","type","placeholder","value","handleChange","ContentPage","props","Loader","_Fragment","PulseLoader","fetchify","isFetched","content","Lists","e","target","UseSearchValue","initialState","setSearchValue","useState","MoviesPage","_data$results","isFetchedAfterMount","useQuery","useGetAllMovies","moviesJSX","results","filter","item","toLowerCase","includes","map","movie"],"sourceRoot":""}